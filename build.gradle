version = '0.0.1-SNAPSHOT'
group = 'com.zac.springboot'


buildscript {
  ext { springBootVersion = '2.0.1.RELEASE' }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    classpath(classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") )
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'war'

sourceSets {
  test {
    groovy { srcDirs = ['src/test/java'] }
  }
}

test {
  testLogging { exceptionFormat = 'full' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources
compileJava.options.compilerArgs = ['-Adoma.dao.subpackage=impl', '-Adoma.dao.suffix=Impl']
repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
  maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
  flatDir { dirs 'lib' }
}
ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.1'
ext.junitPlatformVersion = '1.0.1'
ext.junitJupiterVersion  = '5.0.1'

dependencies {
  compile('org.springframework.boot:spring-boot-starter')
  compile('org.springframework.boot:spring-boot-starter-mail')
  compile('org.springframework.boot:spring-boot-starter-thymeleaf')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-actuator')
  compile('org.seasar.doma.boot:doma-spring-boot-starter:1.1.1')
  compile("org.springframework.boot:spring-boot-devtools")
  compile("org.springframework.boot:spring-boot-starter-logging")
  compile('mysql:mysql-connector-java:5.1.41')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
  testRuntime "net.bytebuddy:byte-buddy:1.6.5" // allows mocking of classes (in addition to interfaces)
  testRuntime "org.objenesis:objenesis:2.5.1"  // allows mocking of classes without default constructor (together with CGLIB)

  testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
  compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
  compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
  compile group: 'org.slf4j', name: 'slf4j-ext', version: '1.8.0-beta0'
  compile('org.apache.commons:commons-lang3:3.4')
  // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
  testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
  // https://mvnrepository.com/artifact/javax.mail/mail
  compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'
  // https://mvnrepository.com/artifact/org.codehaus.janino/janino
  compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'
  // https://mvnrepository.com/artifact/javax.activation/activation
  compile group: 'javax.activation', name: 'activation', version: '1.1.1'
  // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
  compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
  // https://mvnrepository.com/artifact/org.logback-extensions/logback-ext-spring
  compile group: 'org.logback-extensions', name: 'logback-ext-spring', version: '0.1.4'
  compile group: 'io.sentry', name: 'sentry-logback', version: '1.6.6'

  // groovy
  compile "org.codehaus.groovy:groovy-all:2.4.13"
  testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
  testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.1-groovy-2.4'
  testCompile("org.gebish:geb-spock:2.0")
  // selenium
  compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.11.0'
  testCompile("org.seleniumhq.selenium:selenium-chrome-driver:3.11.0")
  testCompile("org.seleniumhq.selenium:selenium-firefox-driver:3.11.0")
  testCompile("org.seleniumhq.selenium:selenium-support:3.11.0")
  testCompile("org.seleniumhq.selenium:selenium-api:3.11.0")
  testCompile("org.seleniumhq.selenium:selenium-remote-driver:3.11.0")
  testCompile("org.seleniumhq.selenium:htmlunit-driver:2.27")

  // optional dependencies for using Spock
  testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
  testRuntime "net.bytebuddy:byte-buddy:1.6.5"          // allows mocking of classes (in addition to interfaces)
  testRuntime "org.objenesis:objenesis:2.5.1"    // allows mocking of classes without default constructor (together with CGLIB)

  compile('commons-beanutils:commons-beanutils:1.9.3')
  compile('org.apache.httpcomponents:httpclient:4.5.5')
  compile('com.google.code.gson:gson')
  compile('org.apache.httpcomponents:httpmime:4.5.3')
  // Spring Security
  compile group: 'org.springframework.security', name: 'spring-security-web', version: '5.0.1.RELEASE'
  compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
  compile("org.springframework.boot:spring-boot-starter-security")
  testCompile('org.springframework.security:spring-security-test')
}

jar {
  manifest {
    attributes 'Class-Path': configurations.compile.collect{ 'lib/' + it.getName() }.join(' ')
  }
}

test {
  jvmArgs = ['-Dspring.profiles.active=unittest']
  exclude "geb/**"
}
